spring.application.name=p005-spring-kafka-cloud-stream

spring.cloud.stream.binders.kafka.type=kafka
spring.cloud.stream.binders.kafka.environment.spring.kafka.bootstrap-servers=localhost:9092
#spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.producer-properties.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.cloud.stream.kafka.binder.consumer-properties.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.spring.json.trusted.packages=*
spring.main.web-application-type=reactive
spring.cloud.stream.kafka.binder.auto-create-topics=true
# earliest: reprocesar histórico o para entornos de desarrollo
#spring.cloud.stream.kafka.binder.configuration.auto.offset.reset=earliest
# latest: si el grupo no tiene offset previo, empieza a leer desde los mensajes más recientes
#spring.cloud.stream.kafka.binder.configuration.auto.offset.reset=latest

# Producers
#spring.cloud.stream.bindings.stringProducer-out-0.destination=topic-strings
#spring.cloud.stream.bindings.stringProducer-out-0.binder=kafka

#spring.cloud.stream.bindings.productProducer-out-0.destination=topic-products
#spring.cloud.stream.bindings.productProducer-out-0.binder=kafka

spring.cloud.stream.bindings.orderProducer-out-0.destination=topic-orders
spring.cloud.stream.bindings.orderProducer-out-0.binder=kafka

# Consumer
#spring.cloud.stream.bindings.stringConsumer-in-0.destination=topic-strings
#spring.cloud.stream.bindings.stringConsumer-in-0.binder=kafka
#spring.cloud.stream.bindings.stringConsumer-in-0.group=group-strings-consumers

#spring.cloud.stream.bindings.productConsumer-in-0.destination=topic-products
#spring.cloud.stream.bindings.productConsumer-in-0.binder=kafka
#spring.cloud.stream.bindings.productConsumer-in-0.group=group-products-consumers

spring.cloud.stream.bindings.orderProcessor-in-0.destination=topic-orders
spring.cloud.stream.bindings.orderProcessor-in-0.binder=kafka
spring.cloud.stream.bindings.orderProcessor-in-0.group=group-orders-consumers
spring.cloud.stream.bindings.orderProcessor-in-0.consumer.max-attempts=3
spring.cloud.stream.bindings.orderProcessor-out-0.destination=topic-notifications
spring.cloud.stream.bindings.orderProcessor-out-0.binder=kafka

spring.cloud.stream.bindings.notificationConsumer-in-0.destination=topic-notifications
spring.cloud.stream.bindings.notificationConsumer-in-0.binder=kafka
spring.cloud.stream.bindings.notificationConsumer-in-0.group=group-notifications-consumers

# Definición de funciones
#spring.cloud.function.definition=stringProducer;stringConsumer
#spring.cloud.function.definition=productProducer;productConsumer
spring.cloud.function.definition=orderProducer;orderProcessor;notificationConsumer

