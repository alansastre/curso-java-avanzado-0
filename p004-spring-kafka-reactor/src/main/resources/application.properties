spring.application.name=p004-spring-kafka-reactor
spring.kafka.template.default-topic=spring-topic
# producer: https://kafka.apache.org/documentation/#producerconfigs
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=5
spring.kafka.producer.properties.retry.backoff.ms=150
# consumer: https://kafka.apache.org/documentation/#consumerconfigs
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=spring-group
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# en desarrollo se puede leer desde el inicio
# spring.kafka.consumer.auto-offset-reset=earliest
# leer desde la ultima posicion le√≠da
# spring.kafka.consumer.auto-offset-reset=latest
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
logging.level.org.springframework.r2dbc=DEBUG